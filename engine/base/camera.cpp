
///
///
///
///
///



#include "camera.h"



///
///
cx::engine::base::camera::camera( glm::vec3  position, glm::vec3  direction, glm::vec3  up, cx::engine::eventing* events)
: cx::engine::base::eventable (events)
{
	// Set the position, interest-direction and up-direction of the static camera.
	this->position = position;

	// Set the view transformation with a glm::lookAt call.
	this->look = glm::lookAt( position, direction, up );

	// Send an event to the message loop signifying the position the scene is rendered from.
        this->send_move_message();
}
cx::engine::base::camera::camera(): cx::engine::base::eventable (events){ };



///
///
glm::mat4  cx::engine::base::camera::get_transformation()
{
	// Return the static view transformation generated by the glm::lookAt call.
	return this->look;
}

// Send an event to the message loop signifying the position the scene is rendered from.
void cx::engine::base::camera::send_move_message(){
    SDL_Event event;
	event.type       = SDL_CX_MOVEEVENT;
	event.user.type  = SDL_CX_MOVEEVENT;
	event.user.data1 = (void*)&this->position;
	SDL_PushEvent( &event );
    
}
